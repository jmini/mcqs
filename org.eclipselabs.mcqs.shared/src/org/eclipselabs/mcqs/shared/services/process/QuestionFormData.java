/*******************************************************************************
 * Copyright 2012 Jeremie Bresson
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/
package org.eclipselabs.mcqs.shared.services.process;

import java.util.Map;

import javax.annotation.Generated;

import org.eclipse.scout.rt.shared.data.basic.table.AbstractTableRowData;
import org.eclipse.scout.rt.shared.data.form.AbstractFormData;
import org.eclipse.scout.rt.shared.data.form.ValidationRule;
import org.eclipse.scout.rt.shared.data.form.fields.AbstractValueFieldData;
import org.eclipse.scout.rt.shared.data.form.fields.tablefield.AbstractTableFieldBeanData;
import org.eclipse.scout.rt.shared.data.form.properties.AbstractPropertyData;

/**
 * <b>NOTE:</b><br>
 * This class is auto generated by the Scout SDK. No manual modifications recommended.
 * 
 * @generated
 */
@Generated(value = "org.eclipse.scout.sdk.workspace.dto.formdata.FormDataDtoUpdateOperation", comments = "This class is auto generated by the Scout SDK. No manual modifications recommended.")
public class QuestionFormData extends AbstractFormData {

  private static final long serialVersionUID = 1L;

  public QuestionFormData() {
  }

  public Choices getChoices() {
    return getFieldByClass(Choices.class);
  }

  public MultipleChoices getMultipleChoices() {
    return getFieldByClass(MultipleChoices.class);
  }

  /**
   * access method for property QuestionNr.
   */
  public Integer getQuestionNr() {
    return getQuestionNrProperty().getValue();
  }

  /**
   * access method for property QuestionNr.
   */
  public void setQuestionNr(Integer questionNr) {
    getQuestionNrProperty().setValue(questionNr);
  }

  public QuestionNrProperty getQuestionNrProperty() {
    return getPropertyByClass(QuestionNrProperty.class);
  }

  public QuestionText getQuestionText() {
    return getFieldByClass(QuestionText.class);
  }

  public static class Choices extends AbstractTableFieldBeanData {

    private static final long serialVersionUID = 1L;

    public Choices() {
    }

    @Override
    public ChoicesRowData addRow() {
      return (ChoicesRowData) super.addRow();
    }

    @Override
    public ChoicesRowData addRow(int rowState) {
      return (ChoicesRowData) super.addRow(rowState);
    }

    @Override
    public ChoicesRowData createRow() {
      return new ChoicesRowData();
    }

    @Override
    public Class<? extends AbstractTableRowData> getRowType() {
      return ChoicesRowData.class;
    }

    @Override
    public ChoicesRowData[] getRows() {
      return (ChoicesRowData[]) super.getRows();
    }

    @Override
    public ChoicesRowData rowAt(int index) {
      return (ChoicesRowData) super.rowAt(index);
    }

    public void setRows(ChoicesRowData[] rows) {
      super.setRows(rows);
    }

    public static class ChoicesRowData extends AbstractTableRowData {

      private static final long serialVersionUID = 1L;
      public static final String choiceNr = "choiceNr";
      public static final String choiceText = "choiceText";
      private Integer m_choiceNr;
      private String m_choiceText;

      public ChoicesRowData() {
      }

      /**
       * @return the ChoiceNr
       */
      public Integer getChoiceNr() {
        return m_choiceNr;
      }

      /**
       * @param choiceNr
       *          the ChoiceNr to set
       */
      public void setChoiceNr(Integer choiceNr) {
        m_choiceNr = choiceNr;
      }

      /**
       * @return the ChoiceText
       */
      public String getChoiceText() {
        return m_choiceText;
      }

      /**
       * @param choiceText
       *          the ChoiceText to set
       */
      public void setChoiceText(String choiceText) {
        m_choiceText = choiceText;
      }
    }
  }

  public static class MultipleChoices extends AbstractValueFieldData<Boolean> {

    private static final long serialVersionUID = 1L;

    public MultipleChoices() {
    }
  }

  public static class QuestionNrProperty extends AbstractPropertyData<Integer> {

    private static final long serialVersionUID = 1L;

    public QuestionNrProperty() {
    }
  }

  public static class QuestionText extends AbstractValueFieldData<String> {

    private static final long serialVersionUID = 1L;

    public QuestionText() {
    }

    /**
     * list of derived validation rules.
     */
    @Override
    protected void initValidationRules(Map<String, Object> ruleMap) {
      super.initValidationRules(ruleMap);
      ruleMap.put(ValidationRule.MAX_LENGTH, 4000);
    }
  }
}

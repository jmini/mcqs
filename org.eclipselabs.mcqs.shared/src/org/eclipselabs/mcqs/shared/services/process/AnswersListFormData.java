/*******************************************************************************
 * Copyright 2012 Jeremie Bresson
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/
package org.eclipselabs.mcqs.shared.services.process;

import java.util.Map;

import javax.annotation.Generated;

import org.eclipse.scout.rt.shared.data.basic.table.AbstractTableRowData;
import org.eclipse.scout.rt.shared.data.form.AbstractFormData;
import org.eclipse.scout.rt.shared.data.form.ValidationRule;
import org.eclipse.scout.rt.shared.data.form.fields.AbstractValueFieldData;
import org.eclipse.scout.rt.shared.data.form.fields.tablefield.AbstractTableFieldBeanData;
import org.eclipse.scout.rt.shared.data.form.properties.AbstractPropertyData;

/**
 * <b>NOTE:</b><br>
 * This class is auto generated by the Scout SDK. No manual modifications recommended.
 * 
 * @generated
 */
@Generated(value = "org.eclipse.scout.sdk.workspace.dto.formdata.FormDataDtoUpdateOperation", comments = "This class is auto generated by the Scout SDK. No manual modifications recommended.")
public class AnswersListFormData extends AbstractFormData {

  private static final long serialVersionUID = 1L;

  public AnswersListFormData() {
  }

  public Answers getAnswers() {
    return getFieldByClass(Answers.class);
  }

  /**
   * access method for property MultipleChoices.
   */
  public Boolean getMultipleChoices() {
    return getMultipleChoicesProperty().getValue();
  }

  /**
   * access method for property MultipleChoices.
   */
  public void setMultipleChoices(Boolean multipleChoices) {
    getMultipleChoicesProperty().setValue(multipleChoices);
  }

  public MultipleChoicesProperty getMultipleChoicesProperty() {
    return getPropertyByClass(MultipleChoicesProperty.class);
  }

  public QuestionNr getQuestionNr() {
    return getFieldByClass(QuestionNr.class);
  }

  public QuestionText getQuestionText() {
    return getFieldByClass(QuestionText.class);
  }

  public Statistics getStatistics() {
    return getFieldByClass(Statistics.class);
  }

  public static class Answers extends AbstractTableFieldBeanData {

    private static final long serialVersionUID = 1L;

    public Answers() {
    }

    @Override
    public AnswersRowData addRow() {
      return (AnswersRowData) super.addRow();
    }

    @Override
    public AnswersRowData addRow(int rowState) {
      return (AnswersRowData) super.addRow(rowState);
    }

    @Override
    public AnswersRowData createRow() {
      return new AnswersRowData();
    }

    @Override
    public Class<? extends AbstractTableRowData> getRowType() {
      return AnswersRowData.class;
    }

    @Override
    public AnswersRowData[] getRows() {
      return (AnswersRowData[]) super.getRows();
    }

    @Override
    public AnswersRowData rowAt(int index) {
      return (AnswersRowData) super.rowAt(index);
    }

    public void setRows(AnswersRowData[] rows) {
      super.setRows(rows);
    }

    public static class AnswersRowData extends AbstractTableRowData {

      private static final long serialVersionUID = 1L;
      public static final String answerNr = "answerNr";
      public static final String name = "name";
      private Long m_answerNr;
      private String m_name;

      public AnswersRowData() {
      }

      /**
       * @return the AnswerNr
       */
      public Long getAnswerNr() {
        return m_answerNr;
      }

      /**
       * @param answerNr
       *          the AnswerNr to set
       */
      public void setAnswerNr(Long answerNr) {
        m_answerNr = answerNr;
      }

      /**
       * @return the Name
       */
      public String getName() {
        return m_name;
      }

      /**
       * @param name
       *          the Name to set
       */
      public void setName(String name) {
        m_name = name;
      }
    }
  }

  public static class MultipleChoicesProperty extends AbstractPropertyData<Boolean> {

    private static final long serialVersionUID = 1L;

    public MultipleChoicesProperty() {
    }
  }

  public static class QuestionNr extends AbstractValueFieldData<Integer> {

    private static final long serialVersionUID = 1L;

    public QuestionNr() {
    }

    /**
     * list of derived validation rules.
     */
    @Override
    protected void initValidationRules(Map<String, Object> ruleMap) {
      super.initValidationRules(ruleMap);
      ruleMap.put(ValidationRule.MAX_VALUE, Integer.MAX_VALUE);
      ruleMap.put(ValidationRule.MIN_VALUE, Integer.MIN_VALUE);
    }
  }

  public static class QuestionText extends AbstractValueFieldData<String> {

    private static final long serialVersionUID = 1L;

    public QuestionText() {
    }

    /**
     * list of derived validation rules.
     */
    @Override
    protected void initValidationRules(Map<String, Object> ruleMap) {
      super.initValidationRules(ruleMap);
      ruleMap.put(ValidationRule.MAX_LENGTH, 4000);
    }
  }

  public static class Statistics extends AbstractTableFieldBeanData {

    private static final long serialVersionUID = 1L;

    public Statistics() {
    }

    @Override
    public StatisticsRowData addRow() {
      return (StatisticsRowData) super.addRow();
    }

    @Override
    public StatisticsRowData addRow(int rowState) {
      return (StatisticsRowData) super.addRow(rowState);
    }

    @Override
    public StatisticsRowData createRow() {
      return new StatisticsRowData();
    }

    @Override
    public Class<? extends AbstractTableRowData> getRowType() {
      return StatisticsRowData.class;
    }

    @Override
    public StatisticsRowData[] getRows() {
      return (StatisticsRowData[]) super.getRows();
    }

    @Override
    public StatisticsRowData rowAt(int index) {
      return (StatisticsRowData) super.rowAt(index);
    }

    public void setRows(StatisticsRowData[] rows) {
      super.setRows(rows);
    }

    public static class StatisticsRowData extends AbstractTableRowData {

      private static final long serialVersionUID = 1L;
      public static final String choice = "choice";
      public static final String result = "result";
      public static final String resultYes = "resultYes";
      public static final String resultNo = "resultNo";
      private String m_choice;
      private Double m_result;
      private Double m_resultYes;
      private Double m_resultNo;

      public StatisticsRowData() {
      }

      /**
       * @return the Choice
       */
      public String getChoice() {
        return m_choice;
      }

      /**
       * @param choice
       *          the Choice to set
       */
      public void setChoice(String choice) {
        m_choice = choice;
      }

      /**
       * @return the Result
       */
      public Double getResult() {
        return m_result;
      }

      /**
       * @param result
       *          the Result to set
       */
      public void setResult(Double result) {
        m_result = result;
      }

      /**
       * @return the ResultYes
       */
      public Double getResultYes() {
        return m_resultYes;
      }

      /**
       * @param resultYes
       *          the ResultYes to set
       */
      public void setResultYes(Double resultYes) {
        m_resultYes = resultYes;
      }

      /**
       * @return the ResultNo
       */
      public Double getResultNo() {
        return m_resultNo;
      }

      /**
       * @param resultNo
       *          the ResultNo to set
       */
      public void setResultNo(Double resultNo) {
        m_resultNo = resultNo;
      }
    }
  }
}
